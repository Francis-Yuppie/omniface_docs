import{_ as a,c as n,o as e,ag as l}from"./chunks/framework.Bbc-m-oI.js";const m=JSON.parse('{"title":"Warp CLI Module Commands","description":"","frontmatter":{},"headers":[],"relativePath":"warp-cli/commands.md","filePath":"warp-cli/commands.md","lastUpdated":1746561997000}'),p={name:"warp-cli/commands.md"};function i(t,s,r,o,c,d){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="warp-cli-module-commands" tabindex="-1">Warp CLI Module Commands <a class="header-anchor" href="#warp-cli-module-commands" aria-label="Permalink to &quot;Warp CLI Module Commands&quot;">​</a></h1><h2 id="module-generation-overview" tabindex="-1">Module Generation Overview <a class="header-anchor" href="#module-generation-overview" aria-label="Permalink to &quot;Module Generation Overview&quot;">​</a></h2><p>Warp CLI provides powerful module scaffolding capabilities with two approaches:</p><pre><code>Automatic CRUD Generation (using --all flag)

Interactive Selection (choose which components to generate)
</code></pre><h2 id="command-reference" tabindex="-1">Command Reference <a class="header-anchor" href="#command-reference" aria-label="Permalink to &quot;Command Reference&quot;">​</a></h2><h3 id="_1-full-crud-module-generation" tabindex="-1">1. Full CRUD Module Generation <a class="header-anchor" href="#_1-full-crud-module-generation" aria-label="Permalink to &quot;1. Full CRUD Module Generation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module:create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="what-this-does" tabindex="-1">What this does: <a class="header-anchor" href="#what-this-does" aria-label="Permalink to &quot;What this does:&quot;">​</a></h3><pre><code>Creates complete CRUD (Create, Read, Update, Delete) operations

Generates all standard folders and files

Sets up routing automatically

Connects to backend API services
</code></pre><h3 id="folder-structure-created" tabindex="-1">Folder structure created: <a class="header-anchor" href="#folder-structure-created" aria-label="Permalink to &quot;Folder structure created:&quot;">​</a></h3><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src/modules/scheduler/</span></span>
<span class="line"><span>├── components/</span></span>
<span class="line"><span>│   ├── atoms/</span></span>
<span class="line"><span>│   ├── molecules/</span></span>
<span class="line"><span>│   └── organisms/</span></span>
<span class="line"><span>├── views/</span></span>
<span class="line"><span>│   ├── ListView.vue</span></span>
<span class="line"><span>│   ├── FormView.vue</span></span>
<span class="line"><span>│   └── DetailView.vue</span></span>
<span class="line"><span>├── stores/</span></span>
<span class="line"><span>│   └── schedulerStore.js</span></span>
<span class="line"><span>├── services/</span></span>
<span class="line"><span>│   └── schedulerService.js</span></span>
<span class="line"><span>└── router.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_2-interactive-module-generation" tabindex="-1">2. Interactive Module Generation <a class="header-anchor" href="#_2-interactive-module-generation" aria-label="Permalink to &quot;2. Interactive Module Generation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module:create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=scheduler</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="interactive-flow" tabindex="-1">Interactive flow: <a class="header-anchor" href="#interactive-flow" aria-label="Permalink to &quot;Interactive flow:&quot;">​</a></h3><ol><li>Prompts you to select which components to generate:</li></ol><div class="language-terminal vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>? Which folders should be created?</span></span>
<span class="line"><span>❯◉ components/atoms</span></span>
<span class="line"><span> ◉ components/molecules</span></span>
<span class="line"><span> ◉ components/organisms</span></span>
<span class="line"><span> ◉ plugins</span></span>
<span class="line"><span> ◉ utils</span></span>
<span class="line"><span> ◉ stores</span></span>
<span class="line"><span> ◉ services</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>Press spacebar to select/deselect items</li><li>Press enter to confirm choices</li></ol><h3 id="_3-module-command-help" tabindex="-1">3. Module Command Help <a class="header-anchor" href="#_3-module-command-help" aria-label="Permalink to &quot;3. Module Command Help&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Displays usage information:</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DEBUG - Loaded ENV Variables: true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>warp module</span></span>
<span class="line"><span>--------------------------------</span></span>
<span class="line"><span>Usage:</span></span>
<span class="line"><span>  warp module:create --name=moduleName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options:</span></span>
<span class="line"><span>  --name            Name of the module (required)</span></span>
<span class="line"><span>  --all             Generate complete CRUD module</span></span>
<span class="line"><span>  -h, --help        Display help for form commands</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Example Usage:</span></span>
<span class="line"><span>  node warp module:create --name=UserForm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="step-by-step-usage-guide" tabindex="-1">Step-by-Step Usage Guide <a class="header-anchor" href="#step-by-step-usage-guide" aria-label="Permalink to &quot;Step-by-Step Usage Guide&quot;">​</a></h2><h3 id="step-1-initialize-a-module" tabindex="-1">Step 1: Initialize a Module <a class="header-anchor" href="#step-1-initialize-a-module" aria-label="Permalink to &quot;Step 1: Initialize a Module&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> module:create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">modulename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="step-2-select-components-interactive-mode" tabindex="-1">Step 2: Select Components (Interactive Mode) <a class="header-anchor" href="#step-2-select-components-interactive-mode" aria-label="Permalink to &quot;Step 2: Select Components (Interactive Mode)&quot;">​</a></h3><p>You&#39;ll see:</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>🚀 Generating Module: products</span></span>
<span class="line"><span>? Which components should be created?</span></span>
<span class="line"><span>(Move up and down to reveal more choices)</span></span>
<span class="line"><span>❯◉ List View</span></span>
<span class="line"><span> ◉ Create Form</span></span>
<span class="line"><span> ◉ Detail View</span></span>
<span class="line"><span> ◉ Edit Form</span></span>
<span class="line"><span> ◉ Store (Pinia)</span></span>
<span class="line"><span> ◉ API Service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="step-3-generation-complete" tabindex="-1">Step 3: Generation Complete <a class="header-anchor" href="#step-3-generation-complete" aria-label="Permalink to &quot;Step 3: Generation Complete&quot;">​</a></h3><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DEBUG - Loaded ENV Variables: true</span></span>
<span class="line"><span>🚀 Generating Module with the following options:</span></span>
<span class="line"><span>- Name: scheduler</span></span>
<span class="line"><span>✔ Which folders should be created? components/atoms, components/molecules, components/organisms, plugins, utils,</span></span>
<span class="line"><span>stores, services, middleware, views, router</span></span>
<span class="line"><span>⠋ Generating module...Fetching Swagger JSON from: http://localhost:9009/v1/docs/openapi-json-resource.json?mod=scheduler</span></span>
<span class="line"><span>⠹ Generating module...📄 Added default.js to /var/www/html/projects/omniface/modules/scheduler/components/atoms</span></span>
<span class="line"><span>📂 Created: /var/www/html/projects/omniface/modules/scheduler/components/atoms</span></span>
<span class="line"><span>📄 Added default.js to /var/www/html/projects/omniface/modules/scheduler/components/molecules</span></span>
<span class="line"><span>📂 Created: /var/www/html/projects/omniface/modules/scheduler/components/molecules</span></span>
<span class="line"><span> .......</span></span>
<span class="line"><span>✅ form.vue for &quot;SpaceAvailability&quot; has been created/overwritten.</span></span>
<span class="line"><span>✅ form.vue for &quot;SystemSettings&quot; has been created/overwritten.</span></span>
<span class="line"><span>✔ ✅ Module successfully generated at: scheduler</span></span>
<span class="line"><span>📂 Scanning modules in: /var/www/html/projects/omniface/modules</span></span>
<span class="line"><span>✅ Routes generated successfully at: /var/www/html/projects/omniface/app/omnicore/moduleRoutes.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><p>Naming Conventions</p><p>Use singular form (--name=user not users)</p><p>PascalCase for module names with multiple words (--name=ProductCategory)</p></li><li><p>When to use --all</p><p>For standard CRUD modules</p><p>When you need all default components</p><p>For rapid prototyping</p></li><li><p>When to use interactive mode</p><p>For custom module requirements</p><p>When you only need specific components</p><p>For incremental additions to existing modules</p></li></ol>`,31)]))}const h=a(p,[["render",i]]);export{m as __pageData,h as default};
